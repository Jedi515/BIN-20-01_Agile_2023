перечень запретов, рекомендаций и требований (по 2-3) для оформления исходных кодов проекта:

1. Методы и переменные рекомендуется называть по их использованию/назначению.
Методы и переменные крайне не рекомендуется называть набором рандомных буквоцифр.

Хороший пример:
String GetSchedule(String groupName) {} // Метод принимает название группы и возвращает расписание

Плохой пример:
void doStuff(String xyzzc) {} // Непонятно ни что метод делает, ни какое значение принимает

2. Рекомендуется использовать табуляцию для разделения особо длинных строк кода (условий, вычислений) на более короткие.
Не рекомендуется писать их в одну строку.

Плохой пример на основе JavaScript:
fetch("./README.md").then(response => {return response.text()}).then(data => {document.querySelector("footer").innerHTML = data;});

Хороший пример на основе плохого примера:
fetch("./README.md")
  .then(response => {
    return response.text()
  })
  .then(data => {
    document.querySelector("footer").innerHTML = data;
  });


3. Если в коде появляется более трёх "табуляций", рекомендуется это исправить с помощью
  либо "ранних выходов", // на примере https://github.com/kiooeht/StSLib/blob/master/src/main/java/com/evacipated/cardcrawl/mod/stslib/actions/common/SelectCardsInHandAction.java#L83
  либо выноса одного из вложений в свой метод,
  либо переосмысления необходимости данных вложений
  
4. Объявлять все переменные в "верхушке" класса.
Допускается "объявлять" переменные сверху, а "задавать" снизу, если структура языка это позволяет (пр. Java)

5. Один класс - один файл.
  
6. Если основная логика работы с классом описана в другом месте - обязательно оставить комментарий с указанием на него.
Пример: https://github.com/Jedi515/sts-jedi/blob/master/src/mod/jedi/relics/BattleStandard.java#L23
